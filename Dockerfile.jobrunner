# BlackLake JobRunner Multi-Stage Dockerfile
# Week 5: Background job processor for BlackLake

# ===== PLANNER STAGE =====
FROM rust:1.82-slim AS planner
WORKDIR /app
RUN cargo install cargo-chef
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

# ===== BUILDER STAGE =====
FROM rust:1.82-slim AS builder
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install cargo-chef
RUN cargo install cargo-chef

# Copy recipe and build dependencies
COPY --from=planner /app/recipe.json recipe.json
RUN cargo chef cook --release --recipe-path recipe.json

# Copy source code and build
COPY . .
RUN cargo build --release --bin jobrunner

# ===== RUNTIME STAGE =====
FROM debian:bookworm-slim AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl3 \
    libpq5 \
    curl \
    clamav-daemon \
    clamav-freshclam \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r jobrunner && useradd -r -g jobrunner jobrunner

# Create app directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/target/release/jobrunner /app/jobrunner

# Copy SQLx data for offline mode
COPY --from=builder /app/sqlx-data.json /app/sqlx-data.json

# Set ownership
RUN chown -R jobrunner:jobrunner /app

# Switch to non-root user
USER jobrunner

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8081/health || exit 1

# Expose health check port
EXPOSE 8081

# Run the job runner
CMD ["./jobrunner"]
