apiVersion: apps/v1
kind: Deployment
metadata:
  name: blacklake-api
  namespace: blacklake
  labels:
    app.kubernetes.io/name: blacklake
    app.kubernetes.io/instance: blacklake
    app.kubernetes.io/component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: blacklake
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: blacklake
        app.kubernetes.io/instance: blacklake
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: blacklake-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: api
        image: blacklake/api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: blacklake-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: blacklake-config
              key: REDIS_URL
        - name: SOLR_URL
          valueFrom:
            configMapKeyRef:
              name: blacklake-config
              key: SOLR_URL
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: blacklake-config
              key: S3_ENDPOINT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: blacklake-secrets
              key: jwt-secret
        - name: CSRF_SECRET
          valueFrom:
            secretKeyRef:
              name: blacklake-secrets
              key: csrf-secret
        - name: API_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: blacklake-secrets
              key: api-key-secret
        - name: REQUEST_SIGNING_SECRET
          valueFrom:
            secretKeyRef:
              name: blacklake-secrets
              key: request-signing-secret
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /var/cache/blacklake
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - api
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: blacklake-api
  namespace: blacklake
  labels:
    app.kubernetes.io/name: blacklake
    app.kubernetes.io/instance: blacklake
    app.kubernetes.io/component: api
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: blacklake
    app.kubernetes.io/component: api
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: blacklake-api
  namespace: blacklake
  labels:
    app.kubernetes.io/name: blacklake
    app.kubernetes.io/instance: blacklake
    app.kubernetes.io/component: api
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: blacklake-api
  namespace: blacklake
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: blacklake-api
  namespace: blacklake
subjects:
- kind: ServiceAccount
  name: blacklake-api
  namespace: blacklake
roleRef:
  kind: Role
  name: blacklake-api
  apiGroup: rbac.authorization.k8s.io
