# BlackLake MLflow Multi-Stage Dockerfile
# Week 5: MLflow server with MinIO integration

# ===== BUILDER STAGE =====
FROM python:3.11-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install dependencies
COPY requirements-mlflow.txt /tmp/requirements.txt
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r /tmp/requirements.txt

# ===== RUNTIME STAGE =====
FROM python:3.11-slim as runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r mlflow && useradd -r -g mlflow mlflow

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create app directory
WORKDIR /app

# Copy MLflow configuration
COPY ops/mlflow/mlflow.conf /app/mlflow.conf

# Set ownership
RUN chown -R mlflow:mlflow /app

# Switch to non-root user
USER mlflow

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Expose port
EXPOSE 5000

# Environment variables
ENV MLFLOW_BACKEND_STORE_URI=""
ENV MLFLOW_DEFAULT_ARTIFACT_ROOT=""
ENV MLFLOW_S3_ENDPOINT_URL=""
ENV AWS_ACCESS_KEY_ID=""
ENV AWS_SECRET_ACCESS_KEY=""

# Run MLflow server
CMD ["mlflow", "server", \
     "--backend-store-uri=${MLFLOW_BACKEND_STORE_URI}", \
     "--default-artifact-root=${MLFLOW_DEFAULT_ARTIFACT_ROOT}", \
     "--host=0.0.0.0", \
     "--port=5000", \
     "--workers=4", \
     "--gunicorn-opts", "--timeout=60"]
